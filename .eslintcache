[{"C:\\Users\\thequ\\OneDrive\\Documents\\projects\\voiptest\\src\\index.js":"1","C:\\Users\\thequ\\OneDrive\\Documents\\projects\\voiptest\\src\\App.js":"2","C:\\Users\\thequ\\OneDrive\\Documents\\projects\\voiptest\\src\\reportWebVitals.js":"3"},{"size":482,"mtime":1611048167121,"results":"4","hashOfConfig":"5"},{"size":3433,"mtime":1611046146475,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"j5f114",{"filePath":"10","messages":"11","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\thequ\\OneDrive\\Documents\\projects\\voiptest\\src\\index.js",["17","18","19"],"C:\\Users\\thequ\\OneDrive\\Documents\\projects\\voiptest\\src\\App.js",["20","21","22","23","24","25"],"import React, { Component } from \"react\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport \"./index.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { message: \"\" };\n  }\n\n  formChangeHandler = (event) => {\n    this.setState({ message: event.target.value });\n  };\n\n  testMessageinput(input) {\n    var allowedchars =\n      \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890?!@,. ' \\\"- ’ \\n \\t ”“\";\n    var maxlength = 3000;\n\n    console.log(input.length);\n\n    if (input.length <= 0) {\n      return [false, \"Message is empty!\"];\n    }\n    if (input.length > maxlength) {\n      return [false, \"Message is too long! Keep it under 3000 characters please.\"];\n    }\n\n    for (let i = 0; i < input.length; i++) {\n      console.log(input[i]);\n      if (!allowedchars.includes(input[i])) {\n        return [false, \"Invalid characters detected! Please stick with letters, numbers, and punctuation.\"];\n      }\n    }\n    return [true, \"None\"];\n  }\n\n  async postData(theData) {\n    try {\n      var validString,\n        errorMsg = this.testMessageinput(theData);\n      let result = await fetch(process.env.POST_URL, {\n        method: \"post\",\n        mode: \"no-cors\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message: theData,\n        }),\n      });\n      console.log(result);\n      this.props.history.push(\"/post\");\n    } catch (e) {\n      console.log(e);\n      this.props.history.push(\"/failed\");\n    }\n  }\n\n  async handlePost(theData) {\n    var [isValid, errorMsg] = this.testMessageinput(theData);\n\n    if (isValid) {\n      this.postData(theData);\n    } else {\n      alert(errorMsg);\n    }\n  }\n\n  render() {\n    const { match, location, history } = this.props;\n    return (\n      <div className=\"App\">\n        <Route path=\"/\" exact \n        render={(props) => {\n            return (\n              <div>\n                <h2>Send a Message</h2>\n                <br />\n                <form>\n                  <textarea rows=\"5\" cols=\"60\" name=\"description\" onChange={this.formChangeHandler}/>\n                  <br />\n                  <br />\n                  <button type=\"button\" onClick={() => this.handlePost(this.state.message)}>Submit</button>\n                </form>\n                <br />\n                <br />\n                <p>Once done, call (334) 234-2688 to hear messages left by you and others!</p>\n                <hr />\n\n                <div>\n                  <h3>What is this?</h3>\n                  <p>It's a voip forum I made for fun. Watch This.</p>\n                  <br /> github\n                </div>\n              </div>\n            );\n          }}\n        />\n\n        <Route path=\"/post\" exact\n          render={(props) => {\n            return (\n              <div>\n                <b>SUCCESS!</b>\n                <br />\n                <br />\n                <a href=\"/\">Send another message!</a>\n              </div>\n            );\n          }}\n        />\n\n        <Route path=\"/failed\" exact\n          render={(props) => {\n            return (\n              <div>\n                <b>Failed to send!</b>\n                <br />\n                <br />\n                <a href=\"/\">try again!</a>\n              </div>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}\nexport default withRouter(App);\n",["26","27"],"C:\\Users\\thequ\\OneDrive\\Documents\\projects\\voiptest\\src\\reportWebVitals.js",[],["28","29"],{"ruleId":"30","severity":1,"message":"31","line":4,"column":25,"nodeType":"32","messageId":"33","endLine":4,"endColumn":30},{"ruleId":"30","severity":1,"message":"34","line":4,"column":32,"nodeType":"32","messageId":"33","endLine":4,"endColumn":42},{"ruleId":"35","severity":1,"message":"36","line":11,"column":5,"nodeType":"37","endLine":11,"endColumn":52},{"ruleId":"30","severity":1,"message":"38","line":2,"column":10,"nodeType":"32","messageId":"33","endLine":2,"endColumn":23},{"ruleId":"30","severity":1,"message":"39","line":40,"column":11,"nodeType":"32","messageId":"33","endLine":40,"endColumn":22},{"ruleId":"30","severity":1,"message":"40","line":41,"column":9,"nodeType":"32","messageId":"33","endLine":41,"endColumn":17},{"ruleId":"30","severity":1,"message":"41","line":72,"column":13,"nodeType":"32","messageId":"33","endLine":72,"endColumn":18},{"ruleId":"30","severity":1,"message":"42","line":72,"column":20,"nodeType":"32","messageId":"33","endLine":72,"endColumn":28},{"ruleId":"30","severity":1,"message":"43","line":72,"column":30,"nodeType":"32","messageId":"33","endLine":72,"endColumn":37},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"48"},{"ruleId":"46","replacedBy":"49"},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BrowserRouter' is defined but never used.","'validString' is defined but never used.","'errorMsg' is assigned a value but never used.","'match' is assigned a value but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","no-native-reassign",["50"],"no-negated-in-lhs",["51"],["50"],["51"],"no-global-assign","no-unsafe-negation"]